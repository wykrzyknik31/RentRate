services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: rentrate-db
    environment:
      POSTGRES_USER: rentrate
      POSTGRES_PASSWORD: rentrate
      POSTGRES_DB: rentrate
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rentrate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rentrate"]
      interval: 10s
      timeout: 5s
      retries: 5

  # LibreTranslate Service - Disabled (using public API instead)
  # Note: The local LibreTranslate container was experiencing SSL certificate
  # verification issues when downloading language models. We now use the public
  # LibreTranslate API (https://libretranslate.com) instead.
  #
  # To re-enable local LibreTranslate, uncomment this service and update the
  # LIBRETRANSLATE_URL in the backend service to: http://libretranslate:5000
  #
  # libretranslate:
  #   build:
  #     context: ./libretranslate
  #     dockerfile: Dockerfile
  #   container_name: rentrate-libretranslate
  #   ports:
  #     - "5001:5000"
  #   networks:
  #     - rentrate-network
  #   restart: unless-stopped
  #   environment:
  #     - PYTHONHTTPSVERIFY=1
  #     - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
  #   volumes:
  #     - libretranslate_data:/home/libretranslate/.local
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:5000/languages || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s

  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rentrate-backend
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - DB_HOST=db
      - POSTGRES_USER=rentrate
      - POSTGRES_PASSWORD=rentrate
      - POSTGRES_DB=rentrate
      - LIBRETRANSLATE_URL=https://libretranslate.com
      - LIBRETRANSLATE_API_KEY=
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - rentrate-network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rentrate-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - rentrate-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

networks:
  rentrate-network:
    driver: bridge

volumes:
  postgres_data:
  # libretranslate_data: # Disabled - no longer needed with public API
